package com.obss.jss.cvedownloader;

import java.io.File;
import java.util.Scanner;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;

import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.obss.jss.cvedownloader.DAO.CveDAO;
import com.obss.jss.cvedownloader.model.Cve;
import com.obss.jss.cvedownloader.service.CveService;

import lombok.extern.slf4j.Slf4j;

@Component
@Slf4j
public class ImportData implements CommandLineRunner
{
	@Autowired
	CveService cveService;
	
	// burasi 8 olmali
	private final int numberOfInitFiles = 8;
	
	private String readOneCveDAO(Scanner sc)
	{
//		int level = 1;
		StringBuilder result = new StringBuilder("{ ");
//		String old = "";
//		int sayac = 0;
		while(sc.hasNextLine())
		{
			String line = sc.nextLine();
			result.append(line);
			if("        },".equals(line) || "        }".equals(line)) break;
//			if(word.contains)
//			if("},".equals(word) || "}".equals(word) || "}`".equals(word) || word.startsWith("}"))level--;
//			if("{".equals(word) || word.startsWith("{"))level++;
//			if("{".equals(word))level++;
//			if("},".equals(word))level--;
//			result.append(word + " ");
			//if(word.length() > 1 && word.charAt(1) != 'c')log.info("okunan word: "+word + " level: "+level);
//			if("\"id\":".equals(old)) {log.info(word);sayac++;}
//			if(sayac > 1)
//			{
//				log.info("MUKERRER GECIS !!!!!");
//				System.exit(0);
//			}
//			old = word;
		}
		if(!sc.hasNext())log.info("ilginc, next yok");
		return result.toString();
		
	}
	
	@Override
	public void run(String... args) throws Exception
	{
		ObjectMapper objectMapper = new ObjectMapper();
		objectMapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
		for(int i = 1; i<= numberOfInitFiles; i++)
		{
			int numberOfCveReadFromThisFile = 0;
			log.info("started to read file " + i);
			Scanner sc = new Scanner(new File("initData\\initData" + i +".txt"));
			sc.nextLine();
			sc.nextLine();
			while(sc.hasNextLine() && "        {".equals(sc.nextLine()))
			{
				String cveSource = readOneCveDAO(sc);
				CveDAO cveDao = new CveDAO();
				try
				{
					cveDao = objectMapper.readValue(cveSource,CveDAO.class);
				}
				catch(Exception e)
				{
					System.out.println("PROBLEMLI DATA:\n" + cveSource);
					System.exit(0);
				}
				Cve c = new Cve(cveDao);
				cveService.createOrUpdate(c);
				numberOfCveReadFromThisFile++;
				if(numberOfCveReadFromThisFile % 100 == 0)log.info("bu file dan " + numberOfCveReadFromThisFile + " veri tamam");
			}
			if(!sc.hasNext())log.info("ilginc, next yok");
			sc.close();
			log.info("ended reading file " + i);
			log.info("number of cve read from file " + i + " is " + numberOfCveReadFromThisFile);
		}
		
	}

}

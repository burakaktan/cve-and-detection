package com.obss.jss.cvedownloader.task;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import org.springframework.web.reactive.function.client.WebClient;

import com.obss.jss.cvedownloader.DAO.CveDAO;
import com.obss.jss.cvedownloader.DAO.CveListDAO;
import com.obss.jss.cvedownloader.model.Cve;
import com.obss.jss.cvedownloader.service.CveService;
import com.obss.jss.cvedownloader.util.DateUtils;

import lombok.extern.slf4j.Slf4j;

@Component
@Slf4j
public class UpdateDataTask
{
	
	@Autowired
	CveService cveService;
	
	@Autowired
	private WebClient.Builder webClientBuilder;
	
	private String apiUrl = "https://cve.circl.lu/api/query";
	
	private String getLastUpdateDay()
	{
		return DateUtils.parseLocalDateTimeString( cveService.getLastModificationTimeAsString() );
	}
	
	@Scheduled(fixedDelayString="PT2H" , initialDelayString = "PT12H")
	private void update()
	{
		String tomorrow = DateUtils.getTomorrow();
		String last_updated = getLastUpdateDay();
		
		log.info("tomorrow is: "+ tomorrow);
		log.info("last update is: "+ last_updated);
		
		
		CveListDAO oncu = webClientBuilder.build()
		.get()
		.uri(apiUrl)
		.header("limit", "1")
		.header("time_start", last_updated)
		.header("time_end", tomorrow)
		.header("time_modifier", "between")
		.header("time_type", "last-modified")
		.retrieve()
		.bodyToMono(CveListDAO.class)
		.block();
		
		int miktar = oncu.getTotal();
		
		CveListDAO resp = webClientBuilder.build()
		.get()
		.uri(apiUrl)
		.header("limit", ""+ miktar)
		.header("time-start", last_updated)
		.header("time-end", tomorrow)
		.header("time-modifier", "between")
		.header("time_type", "last-modified")
		.retrieve()
		.bodyToMono(CveListDAO.class)
		.block();
		
		for(CveDAO cveDao : resp.getResults())
		{
			Cve cve = new Cve(cveDao);
			cveService.createOrUpdate(cve);
		}
		
		log.info("update successfull.\n");
	}
}
